@page "/reservas"
@using agendamedica.Data
@inject Radzen.DialogService DialogService

<div id="espaciado">
    <h1 class="mt-2 m-lg-2 pb-3">Reservas medicas</h1>
    <RadzenDataGrid Data="@appointments" TItem="Appointment" FilterPopupRenderMode="PopupRenderMode.Initial" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Simple" AllowSorting="true" AllowFiltering="true" AllowPaging="true" PageSize="12">
        <Columns>
            <RadzenDataGridColumn TItem="Appointment" Property="Rut" Title="RUT" />
            <RadzenDataGridColumn TItem="Appointment" Property="PaNombre" Title="Nombre" />
            <RadzenDataGridColumn TItem="Appointment" Property="PaApellidoPa" Title="Apellido paterno" />
            <RadzenDataGridColumn TItem="Appointment" Property="PaApellidoMa" Title="Apellido materno" />
            <RadzenDataGridColumn TItem="Appointment" Property="EsNombre" Title="Nombre especialista" />
            <RadzenDataGridColumn TItem="Appointment" Property="EsApellido" Title="Apellido especialista" />
            <RadzenDataGridColumn TItem="Appointment" Property="Area" Title="Área" />            
            <RadzenDataGridColumn TItem="Appointment" Title="Fecha" Property="Start" Filterable="false" Sortable="false">
                <Template Context="appointment">
                    @appointment.Start.ToShortDateString()
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Appointment" Title="Hora" Property="Start" Filterable="false" Sortable="false">
                <Template Context="appointment">
                    @appointment.Start.ToShortTimeString()
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Appointment" Title="Editar" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
                <Template Context="appointment">
                    <RadzenButton Icon="edit" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Light" Click="@(e => EditForm(appointment))" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</div>


@code {
    @inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
    @inject agendamedica.Iservice.IAppointmentService appointmentService
    Appointment appointment = new Appointment();
    IList<Appointment> appointments = new List<Appointment>();

    protected override async Task OnInitializedAsync()
    {
        GetAppointments();
        await GetEspecialistas();
    }

    private void GetAppointments()
    {
        appointments = appointmentService.GetAppointment();
    }

    async Task EditForm(Appointment appointment)
    {
        var copy = new Appointment
            {
                Id = appointment.Id,
                Start = appointment.Start,
                End = appointment.End,
                PaNombre = appointment.PaNombre,
                PaApellidoPa = appointment.PaApellidoPa,
                PaApellidoMa = appointment.PaApellidoMa,
                Rut = appointment.Rut,
                EspecialistaId = appointment.EspecialistaId,
                Area = appointment.Area
            };

        var data = await DialogService.OpenAsync<EditAppointmentPage>("Editar cita", new Dictionary<string, object> { { "Appointment", copy } });

        if (data != null)
        {
            appointmentService.SaverOrUpdate(data);
            NavigationManager.NavigateTo(NavigationManager.Uri, true);
        }
    }

    @inject agendamedica.Iservice.IEspecialistaService especialistaService
    List<Especialista> especialistas = new List<Especialista>();

    private async Task GetEspecialistas()
    {
        especialistas = especialistaService.GetEspecialista();
    }
}