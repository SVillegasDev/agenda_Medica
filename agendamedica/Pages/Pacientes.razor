@page "/especialidades"
@using agendamedica.Data
@inject agendamedica.Iservice.IAreaMedicaService areaMedicaService

<div class="row" id="espaciado">
    <h1 class="mt-2 m-lg-2 pb-3">Especialidades medicas</h1>
    <div class="col-md-4">
        <div class="row">
            <div class="col-md-4">
                <label>Especialidad:</label>
            </div>
            <div class="col-md-8">
                <input @bind="areaMedica.Nombre" style="width:100%;"/>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-8 mt-4">
                <button class="btn btn-primary " @onclick="@(e => Save())">Guardar</button>
                <button class="btn btn-danger" @onclick="@(e => Reset())">Reset</button>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th class="col-md-2 text-center">Editar</th>
                    <th class="col-md-2 text-center">Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @if (areasMedicas.Count() > 0)
                {
                    @foreach (var pac in areasMedicas)
                    {
                        <tr>
                            <td>@pac.Nombre</td>
                            <td class="text-center">
                                <RadzenButton Icon="edit" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Info" Click="@(e => Edit(pac.Id))" />
                            </td>
                            <td class="text-center">
                                <RadzenButton Icon="delete" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Danger" Click="@(e => Delete(pac.Id))" />
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>


@code {
    AreaMedica areaMedica = new AreaMedica();
    List<AreaMedica> areasMedicas = new List<AreaMedica>();


    protected override async Task OnInitializedAsync()
    {
        GetAreasMedicas();
    }

    private void GetAreasMedicas()
    {
        areasMedicas = areaMedicaService.GetAreasMedicas();
    }

    private void Save()
    {
        areaMedicaService.SaveOrUpdate(areaMedica);
        Reset();
        GetAreasMedicas();
    }
    private void Reset()
    {
        areaMedica = new AreaMedica();
    }

    private void Edit(string areaMedicaId)
    {
        areaMedica = areaMedicaService.GetAreaMedica(areaMedicaId);
    }

    private void Delete(string areaMedicaId)
    {
        areaMedicaService.Delete(areaMedicaId);
        GetAreasMedicas();
    }


}
